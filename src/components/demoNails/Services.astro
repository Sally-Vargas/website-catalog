---
import { Image } from 'astro:assets';

// Importa las imágenes desde la carpeta `src`
import imgManicure from './images/demo/4-nails.jpg';
import imgAcrylyc from './images/demo/3-nails.jpg';
import imgGelish from './images/demo/6-nails.jpg';
import imgPedicure from './images/demo/5-nails.jpg';
import imgDesigns from './images/demo/7-nails.jpg';
import imgKids from './images/demo/8-nails.jpg';

const servicesData = [
    { title: 'Manicure Clásico', image: imgManicure, alt: 'Manos con manicure clásico' },
    { title: 'Uñas Acrílicas', image: imgAcrylyc, alt: 'Uñas acrílicas decoradas' },
    { title: 'Gelish', image: imgGelish, alt: 'Uñas con esmalte Gelish de colores' },
    { title: 'Pedicure Spa', image: imgPedicure, alt: 'Pies durante un tratamiento de pedicure spa' },
    { title: 'Diseños personalizados', image: imgDesigns, alt: 'Uñas con diseños artísticos personalizados' },
    { title: 'Personalizados infantiles', image: imgKids, alt: 'Uñas infantiles con diseños divertidos' },
];
---
<!-- services Section -->
<section id="services" class="services">
    <div class="container">
        <h2 class="section-title fade-in">Nuestros servicios</h2>
        <div class="services-grid">
            {servicesData.map(service => (
                <div class="services-item">
                    <div class="services-image">
                        <Image 
                            src={service.image} 
                            alt={service.alt} 
                            widths={[300, 600, 900]}
                            sizes="(max-width: 768px) 90vw, (max-width: 1024px) 45vw, 30vw"
                            quality="mid" 
                            class="service-img-tag" />
                    </div>
                    <div class="services-content">
                        <h4>{service.title}</h4>
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>

<style>
/* services Section */
.services {
    background: var(--bg-primary);
}

.services-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 3rem;
    margin-top: 2rem;
}

.services-item {
    background: var(--bg-card);
    border-radius: 25px;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(20px);
    opacity: 0;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
}

.services-item.animate {
    transform: translateY(0);
    opacity: 1;
}

.services-item:hover {
    transform: translateY(-15px);
    box-shadow: var(--shadow-2xl);
}

.services-image {
    width: 100%;
    height: 200px;
    position: relative;
    overflow: hidden;
}

.service-img-tag {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.services-image::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.1) 100%);
    transition: all 0.3s ease;
}

.services-item:hover .services-image::before {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.4) 0%, rgba(139, 92, 246, 0.3) 100%);
}

.services-content {
    padding: 2rem;
}

.services-content h4 {
    font-family: 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', sans-serif;
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-primary);
    font-weight: 600;
    text-align: center;
}

.services-content p {
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
    line-height: 1.7;
}

@media (max-width: 1024px) {
    .services-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 2rem;
    }
}

@media (max-width: 768px) {
    .services-grid {
        grid-template-columns: 1fr;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const portfolioObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const items = entry.target.querySelectorAll('.services-item');
                items.forEach((item, index) => {
                    setTimeout(() => {
                        item.classList.add('animate');
                    }, index * 150);
                });
            }
        });
    }, { threshold: 0.1 });

    const portfolioSection = document.querySelector('#services .services-grid');
    if (portfolioSection) {
        portfolioObserver.observe(portfolioSection);
    }
});
</script>